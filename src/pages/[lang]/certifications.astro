---
import Layout from '../../layouts/Layout.astro';
import JsonLD from '../../components/JsonLD.astro';
import {getI18nData, getCertificationsData, getSiteData, type Certification} from '../../data';

const siteData = getSiteData();

// Generate static paths for certifications page
export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'es' } }
  ];
}

// Get current locale
const currentLocale = Astro.currentLocale || 'en';
const t = getI18nData(currentLocale);
const certificationsData = getCertificationsData(currentLocale)

// Get certifications for current locale
const certifications:Certification[] = certificationsData.names? Object.values(certificationsData.names) : [];

// Format date helper
function formatDate(date: string | Date): string {
  const d = new Date(date);
  return d.toLocaleDateString(currentLocale, { 
    year: 'numeric', 
    month: '2-digit', 
    day: '2-digit' 
  });
}
---

<Layout 
  title={`${t.certifications.heading} | ${siteData.title}`}
  description={`${t.certifications.heading} - ${siteData.description}`}
  lang={currentLocale}
>
  <slot name="head">
    <JsonLD type="ItemList" data={{
      "@context": "https://schema.org",
      "@type": "ItemList",
      "name": t.certifications.heading,
      "description": `${t.certifications.heading} - ${siteData.description}`,
      "itemListElement": certifications.map((cert: any) => ({
        "@type": "EducationalOccupationalCredential",
        "name": cert.name,
        "url": cert.credentialUrl,
        "issuer": {"@type": "Organization", "name": cert.issuer},
        "datePublished": cert.issuedOn
      }))
    }} />
  </slot>

  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <header class="mb-16 text-center">
      <div class="inline-flex items-center px-3 py-1 rounded-full bg-purple-100 text-purple-800 text-sm font-medium mb-6">
        {t.certifications.officialTag}
      </div>
      <h1 class="text-4xl sm:text-5xl font-bold tracking-tight text-slate-900 mb-6">
        {t.certifications.heading}
      </h1>
      <p class="text-lg text-slate-600 max-w-3xl mx-auto">
        {t.certifications.subtitle}
      </p>
    </header>

    <section class="mb-12">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" role="list">
        {certifications.map((cert: any, index: number) => (
          <article 
            class="relative rounded-xl border border-slate-200 bg-white p-6 shadow-sm transition hover:shadow-md focus-within:shadow-md hover:-translate-y-0.5 focus-within:-translate-y-0.5 duration-200" 
            role="listitem"
          >
            <a 
              href={cert.credentialUrl} 
              target="_blank" 
              rel="noopener noreferrer" 
              class="absolute inset-0 rounded-xl focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-500 focus-visible:ring-offset-2 focus-visible:ring-offset-white" 
              aria-label={`${t.certifications.viewCredential}: ${cert.name}`}
            >
              <span class="sr-only">{t.certifications.viewCredential}: {cert.name}</span>
            </a>
            
            <div class="flex flex-col items-center text-center">
              <div class="mb-4">
                <img 
                  src={cert.imageUrl} 
                  alt={cert.name} 
                  width="128" 
                  height="128" 
                  loading="lazy" 
                  decoding="async" 
                  class="h-24 w-24 object-contain mx-auto"
                />
              </div>
              
              <h3 class="text-lg font-semibold text-slate-900 mb-2">
                {cert.name}
              </h3>
              
              <p class="text-sm text-slate-600 mb-2">
                <span class="sr-only">{t.certifications.issuerLabel}: </span>
                {cert.issuer}
              </p>
              
              <p class="text-xs text-slate-500">
                {t.certifications.issuedOn} {formatDate(cert.issuedOn)}
              </p>
            </div>
          </article>
        ))}
      </div>
    </section>

    {certifications.length === 0 && (
      <div class="text-center py-12">
        <p class="text-slate-600">{t.common.noCertifications}</p>
      </div>
    )}
  </div>
</Layout>
