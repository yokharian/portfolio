---
// JSON-LD Structured Data Component for Astro
import {getSiteData} from '../data';

export interface Props {
  type?: 'Person' | 'WebSite' | 'Article' | 'Organization' | 'BreadcrumbList' | 'ItemList';
  data?: Record<string, any>;
  jsonLdData?: Record<string, any>;
}

const {type, data, jsonLdData} = Astro.props;

// Get site data
const siteData = getSiteData();

// If jsonLdData is provided, use it directly
// Otherwise, use type and data to construct the schema
const schemaData = jsonLdData || (type && data ? data : null);

// Default Person schema if no data is provided
const defaultPersonSchema = {
  "@context": "https://schema.org",
  "@type": "Person",
  "name": siteData.author,
  "description": siteData.description,
  "url": siteData.url,
  "sameAs": [
    siteData.socialUrls.github,
    siteData.socialUrls.linkedin
  ]
};

const finalData = schemaData || defaultPersonSchema;
---

{schemaData && (
<script type="application/ld+json" set:html={JSON.stringify(finalData)}/>
  )}
