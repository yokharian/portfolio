---
// Base layout component for Astro
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import SkipLink from '../components/SkipLink.astro';
import JsonLD from '../components/JsonLD.astro';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
  type?: string;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
  lang?: string;
}

const {
  title,
  description,
  image,
  canonicalURL,
  type = 'website',
  publishedTime,
  modifiedTime,
  author,
  tags,
  lang = Astro.currentLocale || 'en'
} = Astro.props;

// Site data - these would normally come from a data file
const site = {
  title: "Sofia Ramirez â€” Portfolio",
  description: "Portfolio of Sofia Ramirez: Python and AWS solutions architect.",
  url: "https://sofiaramirez.dev",
  defaultLanguage: "en"
};

// Set defaults
const pageTitle = title || site.title;
const pageDescription = description || site.description;
const pageImage = image || (site.url + '/assets/images/profile.svg');
const canonicalURLFinal = canonicalURL || (site.url + Astro.url.pathname);
const pageAuthor = author || site.title;

// Generate title tag with proper formatting
const fullTitle = pageTitle !== site.title 
  ? `${pageTitle} | ${site.title} - ${site.description}`
  : pageTitle;
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <!-- SEO Meta Tags -->
    <title>{fullTitle}</title>
    <meta name="description" content={pageDescription}>
    <meta name="author" content={pageAuthor}>
    <link rel="canonical" href={canonicalURLFinal}>

    <!-- Open Graph tags -->
    <meta property="og:title" content={pageTitle}>
    <meta property="og:description" content={pageDescription}>
    <meta property="og:image" content={pageImage}>
    <meta property="og:url" content={canonicalURLFinal}>
    <meta property="og:type" content={type}>
    <meta property="og:site_name" content={site.title}>
    <meta property="og:locale" content={lang}>

    <!-- Twitter Card tags -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content={pageTitle}>
    <meta name="twitter:description" content={pageDescription}>
    <meta name="twitter:image" content={pageImage}>

    <!-- Article specific meta tags -->
    {type === 'article' && publishedTime && (
      <meta property="article:published_time" content={publishedTime}>
    )}
    {type === 'article' && modifiedTime && (
      <meta property="article:modified_time" content={modifiedTime}>
    )}
    {type === 'article' && author && (
      <meta property="article:author" content={author}>
    )}
    {type === 'article' && tags && tags.map(tag => (
      <meta property="article:tag" content={tag}>
    ))}

    <!-- Additional SEO meta tags -->
    <meta name="robots" content="index, follow">
    <meta name="googlebot" content="index, follow">
    <meta name="theme-color" content="#0ea5e9">
    <meta name="msapplication-TileColor" content="#0ea5e9">
    
    <!-- Language alternates -->
    <link rel="alternate" href={`${site.url}${Astro.url.pathname}?lang=en`} hreflang="en">
    <link rel="alternate" href={`${site.url}${Astro.url.pathname}?lang=es`} hreflang="es">
    <link rel="alternate" href={`${site.url}${Astro.url.pathname}`} hreflang="x-default">
    
    <!-- Styles -->
    <link rel="stylesheet" href="/assets/css/styles.css">
    
    <!-- Scripts -->
    <script id="i18n-data" type="application/json">{"en": {}, "es": {}}</script>
    <script id="rum-config" type="application/json">{"enabled": false}</script>
    
    <!-- AWS CloudWatch RUM Integration -->
    {import.meta.env.PROD && (
      <script src="/assets/js/rum.js" defer></script>
    )}
    
    <!-- JSON-LD Structured Data -->
    <JsonLD type="Person" data={{
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Sofia Escobedo",
      "description": "Python and AWS solutions architect",
      "url": "https://sofiaescobedo.com",
      "sameAs": [
        "https://github.com/sofia-escobedo",
        "https://linkedin.com/in/sofia-escobedo"
      ]
    }} />
    
    <slot name="head" />
  </head>
  <body class="min-h-screen bg-slate-50 text-slate-800 antialiased">
    <SkipLink />

    <Header />

    <main id="main" class="container mx-auto px-4 py-8">
      <slot />
    </main>

    <Footer />

    <!-- Privacy Banner will be added later -->
    
    <!-- Scripts -->
    <script src="/assets/js/lang-bootstrap.js" defer></script>
    <script src="/assets/js/lang-switcher.js" defer></script>
    <script src="/assets/js/i18n-client.js" defer></script>
  </body>
</html>
