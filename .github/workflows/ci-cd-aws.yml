name: CI & Deploy to aws

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch name to deploy (defaults to event branch)"
        required: false
      reason:
        description: "Optional note for the deploy log"
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.branch || github.ref_name }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build

    - name: Run every test suite
      run: npm run test
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  deploy:
    needs: test
    if: github.event_name == 'push' && github.event_name != 'pull_request'
    environment: ${{ github.event.inputs.branch || github.ref_name }}
    name: Deploy with Amplify CLI
    runs-on: ubuntu-latest
    env:
      DEPLOY_BRANCH: ${{ github.event.inputs.branch || github.ref_name }}
      AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
      CI: 1 

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Deploy backend with Amplify CLI
        env:
          DEPLOY_BRANCH: ${{ env.DEPLOY_BRANCH }}
          AMPLIFY_APP_ID: ${{ env.AMPLIFY_APP_ID }}
        run: |
          if [ -z "$AMPLIFY_APP_ID" ]; then
            echo "Missing AMPLIFY_APP_ID secret." >&2
            exit 1
          fi

          branch="$DEPLOY_BRANCH"
          if [ -z "$branch" ]; then
            echo "Unable to detect branch; set workflow input or ensure push event." >&2
            exit 1
          fi

          echo "Deploying Amplify app $AMPLIFY_APP_ID (branch: $branch)."
          npx ampx pipeline-deploy --branch "$branch" --app-id "$AMPLIFY_APP_ID"